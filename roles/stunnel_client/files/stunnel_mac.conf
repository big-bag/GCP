; **************************************************************************
; * Global options                                                         *
; **************************************************************************

; It is recommended to drop root privileges if stunnel is started by root
setuid = nobody
setgid = nobody

; PID file is created inside the chroot jail (if enabled)
chroot = /usr/local/var/lib/stunnel/
pid = /stunnel.pid

; Debugging stuff (may be useful for troubleshooting)
;foreground = yes
;debug = info
;log = append
;output = /stunnel.log
debug = 0

; Enable FIPS 140-2 mode if needed for compliance
;fips = yes

; The pkcs11 engine allows for authentication with cryptographic
; keys isolated in a hardware or software token
; MODULE_PATH specifies the path to the pkcs11 module shared library,
; e.g. softhsm2.dll or opensc-pkcs11.so
; Each section using this feature also needs the "engineId = pkcs11" option
;engine = pkcs11
;engineCtrl = MODULE_PATH:/usr/lib/softhsm/libsofthsm2.so
;engineCtrl = PIN:1234

; Performance tunning
;socket = l:TCP_NODELAY=1
;socket = r:TCP_NODELAY=1
#compression = rle

; **************************************************************************
; * Service defaults may also be specified in individual service sections  *
; **************************************************************************

; Enable support for the insecure SSLv3 protocol
;options = -NO_SSLv3

; These options provide additional security at some performance degradation
;options = SINGLE_ECDH_USE
;options = SINGLE_DH_USE

sslVersion = all
options = NO_SSLv2
options = NO_SSLv3

; **************************************************************************
; * Service definitions                                                    *
; **************************************************************************

; ***************************************** TLS client mode services

[openvpn]
client = yes
accept = 127.0.0.1:1194
connect = stunnel.domain.com:8443
;connect = {{ ansible_default_ipv4.address }}:443
verifyPeer = yes
CAfile = /usr/local/etc/stunnel/stunnel_server.crt
cert = /usr/local/etc/stunnel/stunnel_client_{{ item.1.name }}_crt.pem
key = /usr/local/etc/stunnel/stunnel_client_{{ item.1.name }}_key.pem
### 'verifyPeer' - Check the server
### 'CAfile' - To check the server it needs its certificate
### 'cert', 'key' - A certificate and a key are needed to verify the client (verifyPeer) on the server

; vim:ft=dosini
