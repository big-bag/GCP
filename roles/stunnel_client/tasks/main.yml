---
- name: STUNNEL | CREATE DIRECTORY FOR ALL CLIENT CERTS
  file:
    path: /usr/local/etc/stunnel/cert_client
    state: directory
    mode: 0755
  tags:
  - rdp

- name: STUNNEL | CREATE DIRECTORY FOR SPECIFIC CLIENT
  file:
    path: /usr/local/etc/stunnel/cert_client/{{ item.name }}
    state: directory
    mode: 0755
  with_items: "{{ ovpn_server_instance.2.device }}"
  tags:
  - rdp

- name: STUNNEL | OPENSSL PRIVATE KEY GENERATE
  openssl_privatekey:
    path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_key.pem
    type: RSA
    size: 2048
    state: present
  with_items: "{{ ovpn_server_instance.2.device }}"
  tags:
  - rdp

- name: STUNNEL | OPENSSL CSR GENERATE
  openssl_csr:
    path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_req.csr
    privatekey_path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_key.pem
    common_name: "stunnel_client_{{ item.name }}"
    state: present
  with_items: "{{ ovpn_server_instance.2.device }}"
  tags:
  - rdp

- name: STUNNEL | SELF SIGNED OPENSSL CERTIFICATE GENERATE
  openssl_certificate:
    path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_crt.pem
    privatekey_path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_key.pem
    csr_path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_req.csr
    provider: selfsigned
    state: present
  with_items: "{{ ovpn_server_instance.2.device }}"
  tags:
  - rdp

- name: STUNNEL | PKCS#12 CERT FILE GENERATE
  openssl_pkcs12:
    action: export
    path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_crt.p12
    friendly_name: "stunnel_client_{{ item.name }}"
    privatekey_path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_key.pem
    certificate_path: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_crt.pem
    mode: 0600
    state: present
  with_items: "{{ ovpn_server_instance.2.device }}"
  tags:
  - rdp

- name: STUNNEL | CREATE DIRECTORY FOR CERTS TO POPULATE SERVER'S CAfile
  file:
    path: /usr/local/etc/stunnel/cert_client/.cafile
    state: directory
    mode: 0755
  tags:
  - rdp

- name: STUNNEL | COPY CLIENT CERTIFICATE TO CAfile DIRECTORY
  copy:
    src: /usr/local/etc/stunnel/cert_client/{{ item.name }}/stunnel_client_{{ item.name }}_crt.pem
    dest: /usr/local/etc/stunnel/cert_client/.cafile/stunnel_client_{{ item.name }}_crt.pem
    remote_src: yes
  with_items: "{{ ovpn_server_instance.2.device }}"
  tags:
  - rdp

# WITHOUT clients.crt STUNNEL WILL NOT START
- name: STUNNEL | POPULATE SERVER'S CAfile WITH CLIENTS CERTIFICATES
  assemble:
    src: /usr/local/etc/stunnel/cert_client/.cafile
    dest: /usr/local/etc/stunnel/cert_server/clients.crt
    regexp: '_crt.pem$'
    remote_src: yes
  notify: STUNNEL | SERVICE RESTART
  tags:
  - rdp

- name: STUNNEL | SERVICE START AND ENABLE
  service:
    name: stunnel
    state: started
    enabled: yes
  tags:
  - rdp

# CONFIGS WILL UPLOAD TO SERVER TO WRITE VARIABLES INSIDE THEM
# VARIABLES LIKE '{{ ansible_default_ipv4.address }}'
- name: STUNNEL CLIENT | UPLOAD CONFIGS TO SERVER
  template:
    src: stunnel_{{ item[1] }}.conf.j2
    dest: /usr/local/etc/stunnel/cert_client/{{ item[0].name }}/{{ item[0].name }}_stunnel_{{ item[1] }}.conf
    owner: root
    group: root
    mode: 0644
  with_nested:
  - "{{ ovpn_server_instance.2.device }}"
  - [ 'mac', 'win' ]
  tags:
  - rdp

- name: STUNNEL CLIENT | RUN SETUP MODULE TO GET OR REFRESH LATEST INFORMARION ABOUT FACTS
  setup:
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | DOWNLOAD SERVER CERT TO ANSIBLE HOST
  fetch:
    src: /usr/local/etc/stunnel/cert_server/stunnel_server.crt
    dest: /tmp
  register: stunnel_server_crt_file
  changed_when: False
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | TAKE NAME OF SERVER CERT FILE
  shell: echo {{ stunnel_server_crt_file.dest }} | rev | cut -d '/' -f1 | rev
  register: stunnel_server_crt_name
  delegate_to: localhost
  changed_when: False
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | DOWNLOAD CLIENT'S CERTS AND KEYS TO ANSIBLE HOST
  fetch:
    src: /usr/local/etc/stunnel/cert_client/{{ item[0].name }}/stunnel_client_{{ item[0].name }}_{{ item[1] }}
    dest: /tmp
  with_nested:
  - "{{ ovpn_server_instance.2.device }}"
  - [ 'crt.pem', 'key.pem', 'crt.p12' ]
  register: stunnel_client_cert_and_key_files
  changed_when: False
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | TAKE NAME OF CLIENT'S CERTS AND KEYS FILES
  shell: echo {{ item.dest }} | rev | cut -d '/' -f1 | rev
  with_items: "{{ stunnel_client_cert_and_key_files.results }}"
  delegate_to: localhost
  register: stunnel_client_cert_and_key_names
  changed_when: False
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | DOWNLOAD CLIENT'S CONFIGS TO ANSIBLE HOST
  fetch:
    src: /usr/local/etc/stunnel/cert_client/{{ item[0].name }}/{{ item[0].name }}_stunnel_{{ item[1] }}.conf
    dest: /tmp
  with_nested:
  - "{{ ovpn_server_instance.2.device }}"
  - [ 'mac', 'win' ]
  register: stunnel_client_config_files
  changed_when: False
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | TAKE NAME OF CLIENT'S CONFIG FILES
  shell: echo {{ item.dest }} | rev | cut -d '/' -f1 | rev
  with_items: "{{ stunnel_client_config_files.results }}"
  delegate_to: localhost
  register: stunnel_client_config_names
  changed_when: False
  tags:
  - rdp
  - send_email

# https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html#json-query-filter
- name: STUNNEL CLIENT | SEND E-MAIL
  mail:
    host: mx.domain.com
    port: 465
    username: no-reply@domain.com
    password: "{{ vault_email_no_reply_pwd }}"
    from: no-reply@domain.com
    to: "{{ item.e_mail }}"
    bcc: "{{ vault_email_bcc_address }}"
    subject: "Credentials for {{ item.name }}"
    body: |
      CAfile:  {{ stunnel_server_crt_name.stdout }}
      cert:    {{ (stunnel_client_cert_and_key_names | json_query(query_cert_names))[0] }}
      key:     {{ (stunnel_client_cert_and_key_names | json_query(query_cert_names))[1] }}
      PKCS#12: {{ (stunnel_client_cert_and_key_names | json_query(query_cert_names))[2] }}
      config_mac: {{ (stunnel_client_config_names | json_query(query_config_names))[0] }}
      config_win: {{ (stunnel_client_config_names | json_query(query_config_names))[1] }}
    attach:
    - "{{ stunnel_server_crt_file.dest }}"
    - "{{ (stunnel_client_cert_and_key_files | json_query(query_cert_files))[0] }}"
    - "{{ (stunnel_client_cert_and_key_files | json_query(query_cert_files))[1] }}"
    - "{{ (stunnel_client_cert_and_key_files | json_query(query_cert_files))[2] }}"
    - "{{ (stunnel_client_config_files | json_query(query_config_files))[0] }}"
    - "{{ (stunnel_client_config_files | json_query(query_config_files))[1] }}"
  vars:
    query_cert_files: "results[].{file_cert_dest: dest, for: (item[?ip_client=='{{ item.ip_client }}'].name)[0]} | [?for=='{{ item.name }}'].file_cert_dest"
    query_cert_names: "results[].{file_cert_name: stdout, for: (item.item[?ip_client=='{{ item.ip_client }}'].name)[0]} | [?for=='{{ item.name }}'].file_cert_name"
    query_config_files: "results[].{file_config_dest: dest, for: (item[?ip_client=='{{ item.ip_client }}'].name)[0]} | [?for=='{{ item.name }}'].file_config_dest"
    query_config_names: "results[].{file_config_name: stdout, for: (item.item[?ip_client=='{{ item.ip_client }}'].name)[0]} | [?for=='{{ item.name }}'].file_config_name"
  with_items: "{{ ovpn_server_instance.2.device }}"
  delegate_to: localhost
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | REMOVE SERVER CERT FILE FROM ANSIBLE HOST
  file:
    path: "{{ stunnel_server_crt_file.dest }}"
    state: absent
  delegate_to: localhost
  changed_when: False
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | REMOVE CLIENT'S CERTS AND KEYS FROM ANSIBLE HOST
  file:
    path: "{{ item.dest }}"
    state: absent
  with_items: "{{ stunnel_client_cert_and_key_files.results }}"
  delegate_to: localhost
  changed_when: False
  tags:
  - rdp
  - send_email

- name: STUNNEL CLIENT | REMOVE CLIENT'S CONFIGS FROM ANSIBLE HOST
  file:
    path: "{{ item.dest }}"
    state: absent
  with_items: "{{ stunnel_client_config_files.results }}"
  delegate_to: localhost
  changed_when: False
  tags:
  - rdp
  - send_email
