---
# https://github.com/TelegramMessenger/MTProxy

- name: MTPROXY | PACKAGES INSTALL
  yum:
    name: "{{ packages_install }}"
    state: installed
  tags:
  - mtproxy

- name: MTPROXY | CLONE GIT REPO
  git:
    repo: https://github.com/TelegramMessenger/MTProxy.git
    dest: /usr/local/src/MTProxy
    update: no
  tags:
  - mtproxy

- name: MTPROXY | CHECK IF objs DIRECTORY EXISTS
  stat:
    path: /usr/local/src/MTProxy/objs
  register: objs_dir
  tags:
  - mtproxy

- name: MTPROXY | MAKE
  make:
    chdir: /usr/local/src/MTProxy
  when: not (objs_dir.stat.exists and objs_dir.stat.isdir)
  tags:
  - mtproxy

# Obtain a secret, used to connect to telegram servers.
- name: MTPROXY | DOWNLOAD PROXY SECRET
  get_url:
    url: https://core.telegram.org/getProxySecret
    dest: /usr/local/src/MTProxy/objs/bin/proxy-secret
    mode: 0644
  tags:
  - mtproxy

# Obtain current telegram configuration. It can change (occasionally), so we encourage you to update it once per day.
- name: MTPROXY | DOWNLOAD PROXY CONFIG
  get_url:
    url: https://core.telegram.org/getProxyConfig
    dest: /usr/local/src/MTProxy/objs/bin/proxy-multi.conf
    mode: 0644
  tags:
  - mtproxy

- name: MTPROXY | ADD CRON JOB TO UPDATE proxy-multi.conf EVERYDAY AT 2 AM
  cron:
    name: "Update telegram configuration"
    minute: "0"
    hour: "2"
    job: "curl -L https://core.telegram.org/getProxyConfig -o /usr/local/src/MTProxy/objs/bin/proxy-multi.conf"
    state: present
  tags:
  - mtproxy

- name: MTPROXY | CHECK IF connect-secret FILE EXISTS
  stat:
    path: /usr/local/src/MTProxy/objs/bin/connect-secret
  register: connect_secret_file
  tags:
  - mtproxy

# Generate a secret to be used by users to connect to your proxy.
- name: MTPROXY | GENERATE PASSWORD FOR connect-secret FILE
  shell: head -c 16 /dev/urandom | xxd -ps
  register: connect_secret_generated
  when: not connect_secret_file.stat.exists
  tags:
  - mtproxy

- name: MTPROXY | SAVE PASSWORD TO connect-secret FILE
  copy:
    content: "{{ connect_secret_generated.stdout }}"
    dest: /usr/local/src/MTProxy/objs/bin/connect-secret
    mode: 0644
  when: not connect_secret_file.stat.exists
  tags:
  - mtproxy

- name: MTPROXY | RUN SETUP MODULE TO GET LATEST INFORMARION ABOUT FACTS
  setup:
  tags:
  - mtproxy

- name: MTPROXY | READ CONTENT OF connect-secret FILE
  slurp:
    src: /usr/local/src/MTProxy/objs/bin/connect-secret
  register: connect_secret_saved_b64
  tags:
  - mtproxy
  - resend_mtproxy_email

- name: MTPROXY | SET FACT ABOUT PASSWORD IN connect-secret FILE
  set_fact:
    connect_secret_saved: "{{ connect_secret_saved_b64['content'] | b64decode }}"
  tags:
  - mtproxy
  - resend_mtproxy_email

- name: MTPROXY | SYSTEMD SERVICE CREATE
  template:
    src: MTProxy.service.j2
    dest: /etc/systemd/system/MTProxy.service
  register: mtproxy_service
  notify: MTPROXY | SERVICE RESTART
  tags:
  - mtproxy

- name: MTPROXY | FORCE SYSTEMD TO REREAD CONFIGS
  systemd:
    daemon_reload: yes
  when: mtproxy_service.changed
  tags:
  - mtproxy

- name: MTPROXY | SERVICE START AND ENABLE
  service:
    name: MTProxy
    state: started
    enabled: yes
  tags:
  - mtproxy

# TO ENABLE RANDOM PADDING ADD dd PREFIX TO secret
- name: MTPROXY | REGISTER LINK TO VAR
  set_fact:
    mtproxy_http_link: "https://t.me/proxy?server={{ proxy_address }}&port={{ proxy_port }}&secret=dd{{ connect_secret_saved }}"
    mtproxy_tg_link: "tg://proxy?server={{ proxy_address }}&port={{ proxy_port }}&secret=dd{{ connect_secret_saved }}"
  tags:
  - mtproxy
  - resend_mtproxy_email

- name: MTPROXY | SEND LINK BY EMAIL
  mail:
    host: mx.domain.com
    port: 465
    username: no-reply@domain.com
    password: "{{ vault_email_no_reply_pwd }}"
    from: no-reply@domain.com
    to: some_user@google.com
    bcc: "{{ vault_email_bcc_address }}"
    subject: "Ansible - TG MTProxy access links"
    body: |
      Link to proxy server:
      {{ mtproxy_http_link }}
      
      Direct link for Telegram app:
      {{ mtproxy_tg_link }}
  delegate_to: localhost
  tags:
  - mtproxy
  - resend_mtproxy_email